Got it — you want all those setup steps (Rust, build tools, Soundness, key generation) to work inside your Codespace repo, so that every time you reopen your Codespace (or anyone else clones your repo), the environment is ready without re-running all commands manually.

The best way is to put everything into a devcontainer.json (with optional Dockerfile) so Codespaces automatically builds the environment for you.


---

Here’s how to do it

1. In your repo, create a folder for your Codespace setup:



mkdir -p .devcontainer

2. Inside .devcontainer, create a Dockerfile that installs all the tools:



# Start with Ubuntu (so it's like "docker run -it ubuntu")
FROM ubuntu:22.04

# Avoid interactive prompts during install
ENV DEBIAN_FRONTEND=noninteractive

# Update & install all dependencies (build tools, curl, git, nano, SSL, pkg-config)
RUN apt update && apt install -y \
    build-essential \
    curl \
    git \
    nano \
    pkg-config \
    libssl-dev

# Install Rust via rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install soundnessup & update it
RUN curl -sSL https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/install | bash && \
    source ~/.bashrc && \
    soundnessup install && \
    soundnessup update

# Default work directory
WORKDIR /workspace


---

3. Now create .devcontainer/devcontainer.json (this tells Codespaces to build the Dockerfile):



{
  "name": "Soundness Dev Environment",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "rust-lang.rust-analyzer",
        "ms-azuretools.vscode-docker",
        "ms-vscode.cpptools"
      ]
    }
  },
  "remoteUser": "root",
  "postCreateCommand": "rustc --version && cargo --version && soundnessup update",
  "workspaceFolder": "/workspace"
}


---

4. Commit these files to your repo:



git add .devcontainer
git commit -m "Add full Codespace setup (Rust + Soundness)"
git push


---

What this does

Every time you open your Codespace, GitHub will:

Build your custom Ubuntu container

Preinstall Rust, Cargo, build tools, and soundnessup

Set /workspace (your repo folder) as the starting point

Load everything automatically, so you don’t need to run source ~/.cargo/env or reinstall packages.




---

How to generate and save your key pair

Once the Codespace is ready:

cd /workspace   # make sure you're in your repo
soundness-cli generate-key --name my-key

Copy the mnemonic and public key somewhere safe.

Save the generated key_store.json in your repo (but preferably keep it private, not pushed to GitHub unless encrypted).


To import an existing key:

soundness-cli import-key --name my-key --mnemonic "your mnemonic phrase"


---

Would you like me to:

1. Make this also work on your local machine (Windows/Mac) by reusing the same Dockerfile outside Codespaces?


2. Or make a separate script (setup.sh) so you can re-run the installation outside Codespaces easily as well?



Or both, so you can run it anywhere? Which one?

